# Container/K8s - should be tagged as "Container/K8s"
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app
  labels:
    app: web-app
    # Resource Purpose
    purpose: "api_service"
    # Resource Owner
    owner: "backend_team"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: web-app
  template:
    metadata:
      labels:
        app: web-app
        # Resource Purpose
        purpose: "web_frontend"
        # Resource Expiry
        expiry: "90_days"
    spec:
      # Container/K8s
      containers:
      - name: web-app
        # Container/K8s
        image: nginx:1.21
        ports:
        - containerPort: 80
        
        # Compute Resource
        resources:
          requests:
            # Compute Resource
            memory: "64Mi"
            # Compute Resource
            cpu: "250m"
          limits:
            # Compute Resource
            memory: "128Mi"
            # Compute Resource
            cpu: "500m"
        
        # Configuration
        env:
        - name: DATABASE_URL
          value: "postgresql://db:5432/app"
        - name: REDIS_URL
          value: "redis://redis:6379"

---
# Container/K8s
apiVersion: v1
kind: Service
metadata:
  name: web-app-service
  labels:
    # Resource Purpose
    purpose: "load_balancer"
    # Resource Owner
    owner: "platform_team"
spec:
  selector:
    app: web-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
  # Container/K8s
  type: LoadBalancer

---
# Storage Operation
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: web-app-storage
  labels:
    # Resource Purpose
    purpose: "data_persistence"
    # Resource Expiry
    expiry: "1_year"
spec:
  accessModes:
    - ReadWriteOnce
  # Storage Operation
  resources:
    requests:
      # Storage Operation
      storage: 10Gi
  # Storage Operation
  storageClassName: fast-ssd

---
# Observability
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  labels:
    # Resource Purpose
    purpose: "monitoring"
    # Resource Owner
    owner: "sre_team"
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
    - job_name: 'web-app'
      # Observability
      static_configs:
      - targets: ['web-app-service:80']
      # Observability
      metrics_path: /metrics
      scrape_interval: 30s

---
# ML Infrastructure
apiVersion: batch/v1
kind: Job
metadata:
  name: model-training
  labels:
    # Resource Purpose
    purpose: "model_training"
    # Resource Expiry
    expiry: "24_hours"
    # Resource Owner
    owner: "ml_team"
spec:
  template:
    spec:
      # Container/K8s
      containers:
      - name: trainer
        # ML Infrastructure
        image: tensorflow/tensorflow:2.8.0-gpu
        
        # Compute Resource
        resources:
          requests:
            # Compute Resource
            nvidia.com/gpu: 1
            # Compute Resource
            memory: "8Gi"
            # Compute Resource
            cpu: "4"
          limits:
            # Compute Resource
            nvidia.com/gpu: 2
            # Compute Resource
            memory: "16Gi"
            # Compute Resource
            cpu: "8"
        
        # Configuration
        env:
        - name: MODEL_TYPE
          value: "transformer"
        - name: TRAINING_DATA_PATH
          value: "/data/training"
        
        # Storage Operation
        volumeMounts:
        - name: training-data
          mountPath: /data
          
      # Storage Operation
      volumes:
      - name: training-data
        persistentVolumeClaim:
          claimName: ml-training-data
      
      restartPolicy: Never